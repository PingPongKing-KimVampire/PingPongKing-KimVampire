# Generated by Django 4.2.14 on 2024-07-20 08:23

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('mode', models.CharField(default='HUMAN', max_length=20)),
                ('start_at', models.DateTimeField(null=True)),
                ('end_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('kind', models.CharField(default='HUMAN', max_length=20)),
                ('effect', models.CharField(default='none', max_length=20)),
                ('score', models.IntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='lobby.game')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, null=True, unique=True)),
                ('password', models.CharField(max_length=100, null=True)),
                ('nickname', models.CharField(max_length=20, null=True, unique=True)),
                ('image_uri', models.URLField(blank=True, null=True)),
                ('win', models.IntegerField(default=0)),
                ('lose', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TeamUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='lobby.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='lobby.user')),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='lobby.game')),
                ('win_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wins', to='lobby.team')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('content', models.TextField(max_length=1000)),
                ('send_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
                ('chat', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='lobby.chat')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='lobby.user')),
            ],
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend', to='lobby.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='lobby.user')),
            ],
        ),
        migrations.CreateModel(
            name='ChatUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_chat', to='lobby.chat')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_user', to='lobby.user')),
            ],
        ),
        migrations.CreateModel(
            name='BlockedRelationship',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('blocked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_user', to='lobby.user')),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocker', to='lobby.user')),
            ],
        ),
        migrations.CreateModel(
            name='BallHit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('x_coordinate', models.DecimalField(decimal_places=6, max_digits=10)),
                ('y_coordinate', models.DecimalField(decimal_places=6, max_digits=10)),
                ('kind', models.CharField(default='PADDLE', max_length=20)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hits_round', to='lobby.round')),
            ],
        ),
        migrations.AddConstraint(
            model_name='friendship',
            constraint=models.UniqueConstraint(fields=('user', 'friend'), name='unique_friendship'),
        ),
        migrations.AddConstraint(
            model_name='chatuser',
            constraint=models.UniqueConstraint(fields=('chat', 'user'), name='unique_chat_user'),
        ),
        migrations.AddConstraint(
            model_name='blockedrelationship',
            constraint=models.UniqueConstraint(fields=('blocker', 'blocked_user'), name='unique_block_realtionship'),
        ),
    ]
